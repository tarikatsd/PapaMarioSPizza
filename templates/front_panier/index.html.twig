{% extends 'base.html.twig' %}

{% block title %}
    Votre Panier
{% endblock %}

{% block body %}
<div class="container mt-4 py-4 mb-5">
<h1 class="text-center mt-4 pt-4 mb-4 pb-4 border-bottom border-warning">
        Votre panier
    </h1>
    <div class="d-flex justify-content-between">
    <a href="{{ path('app_front_pizza') }}" class="btn btn-orange">
    Continuer mes achats
    </a>
    <a href="{{ path('app_front_clear_panier') }}" class="btn btn-red">
    Vider le panier
    </a>
    </div>
    <table class="table table-index table-striped table-responsive">
        <thead>
            <tr>
                <th>Produits</th>
                <th>Suplements</th>
                <th>Prix</th>
                <th>Quantitées</th>
            </tr>
        </thead>
        {% if panier|length > 0 %}   
        <tbody>
            {% if pizzas|length > 0 %}
                {% for pizza in pizzas %}
                    <tr>
                        <td>
                            {{ pizza['pizza'].nom }}
                            </td>
                            <td>
                                {% for ingredient in pizza['ingredientsRemoved'] %}
                                    {{"-"}}{{ingredient.nom }}{{","}}
                                {% endfor %}
                                {% for ingredient in pizza['ingredientsAdded'] %}
                                {{"+"}}{{ ingredient.nom }}{{":"}}
                                    {{ ingredient.prix }}{{","}}
                                {% endfor %}
                            </td>
                            <td class="total-price">
                                {{ pizza['totalPrice'] }}
                            </td>
                            
                            <td>
                                <input type="number" class="quantity" value="{{ pizza['quantity'] }}" min="0" max="20" data-price="{{ pizza['totalPrice'] }}" data-item-id="{{ pizza['uniqueKey'] }}">
                            </td>
                        </tr>
                    {% endfor %}
                {% endif %}
            </tbody>
        <tbody>
            {% if canettes|length > 0 %}
                {% for canette in canettes %}
                    <tr>
                        <td>
                            {{ canette['canette'].nom }} : {{ canette['canette'].taille }}
                        </td>
                        <td>
                        </td>
                        <td class="total-price">
                            {{ canette['totalPrice'] }}
                        </td>
                        <td>
                            <input type="number" class="quantity" value="{{ canette['quantity'] }}" data-item-id="{{ canette['canette'].id ~ "_" ~ canette['canette'].nom }}" min="0" max="20" data-price="{{ canette['totalPrice'] }}">
                        </td>
                    </tr>
                {% endfor %}
            {% endif %}
        </tbody>
        <tbody>
            {% if boissons|length > 0 %}
                {% for boisson in boissons %}
                    <tr>
                        <td>
                            {{ boisson['boisson'].nom }} : {{ boisson['boisson'].taille }}
                        </td>
                        <td>
                        </td>
                        <td class="total-price">
                            {{ boisson['totalPrice'] }}
                        </td>
                        <td>
                            <input type="number" class="quantity" value="{{ boisson['quantity'] }}" data-item-id="{{ boisson['boisson'].id ~ "_" ~ boisson['boisson'].nom }}" min="0" max="20" data-price="{{ boisson['totalPrice'] }}">
                        </td>
                    </tr>
                {% endfor %}
            {% endif %}

        </tbody>
        <tbody>
            {% if desserts|length > 0 %}
                {% for dessert in desserts %}
                    <tr>
                        <td>
                            {{ dessert['dessert'].nom }}
                        </td>
                        <td>
                        </td>
                        <td class="total-price">
                            {{ dessert['totalPrice'] }}
                        </td>
                        <td>
                            <input type="number" class="quantity" value="{{ dessert['quantity'] }}" data-item-id="{{ dessert['dessert'].id ~ "_" ~ dessert['dessert'].nom }}" min="0" max="20" data-price="{{ dessert['totalPrice'] }}">
                        </td>
                    </tr>
                {% endfor %}
            {% endif %}
        </tbody>
        <tbody>
            {% if extras|length > 0 %}
                {% for extra in extras %}
                    <tr>
                        <td>
                            {{ extra['extra'].nom }}
                        </td>
                        <td>
                        </td>
                        <td class="total-price">
                            {{ extra['totalPrice'] }}
                        </td>
                        <td>
                            <input type="number" class="quantity" value="{{ extra['quantity'] }}"data-item-id="{{ extra['extra'].id ~ "_" ~ extra['extra'].nom }}" min="0" max="20" data-price="{{extra['totalPrice'] }}">
                        </td>
                    </tr>
                {% endfor %}
            {% endif %}
        </tbody>        
        <tfoot>
            <tr>
                <td class=" text-center fw-bold">
                    Total
                </td>
                <td id="total" colspan="2" class=" text-center fw-bold">
                    0.00
                </td>
                <td>
                    <a href={{ path('app_front_commande_add')}} class="btn btn-brown">
                        Commander
                    </a>
                </td>
        </tr>
    </tfoot>
    {% else %}
    <tbody>
        <tr>
            <td colspan="4" class="text-center fw-bold fs-4">
                Votre panier est vide
            </td>
        </tr>
    {% endif %}
</table>
</div>
    {% endblock %}
    {% block javascripts %}
    <script>
document.addEventListener("DOMContentLoaded", function() {
    updateTotal();
});
    function updateTotal() {
        let total = 0;
        const quantityInputs = document.querySelectorAll('.quantity');
        quantityInputs.forEach(input => {
            const price = parseFloat(input.getAttribute('data-price'));
            let quantity = parseInt(input.value);
            if (quantity == 0) {
                quantity = 1;
                const confirmDelete = confirm("Voulez-vous supprimer cet article du panier ?");
                if (confirmDelete) {
                    input.parentElement.parentElement.remove();
                }
            }
            input.value = quantity;
            const totalCell = input.parentElement.parentElement.querySelector('.total-price');
            totalCell.textContent = (price * quantity).toFixed(2);
            total += price * quantity;
        });
        const totalCell = document.getElementById('total');
        totalCell.textContent = total.toFixed(2);
    }
    const quantityInputs = document.querySelectorAll('.quantity');
    quantityInputs.forEach(input => {
        input.addEventListener('input', updateTotal);
        const itemId = input.getAttribute('data-item-id');
    });
    function updateCart(itemId, newQuantity) {
        event.preventDefault();
        event.stopPropagation();
        $.ajax({
            type: 'POST',
            url: '/update/panier',
            data: {
                itemId: itemId,
                newQuantity: newQuantity
            },
            dataType: 'json', 
            success: function(data) {
                if (data.success) {
                    console.log('Mise à jour du panier réussie !');
                } else {
                    console.error('Échec de la mise à jour du panier.');
                }
            },
            error: function(xhr, textStatus, errorThrown) {
                console.error('Erreur lors de la requête AJAX : ' + textStatus, errorThrown);
            }
        });
    }
    quantityInputs.forEach(input => {
        input.addEventListener('change', function() {
            const itemId = input.getAttribute('data-item-id');
            const newQuantity = input.value;
            updateCart(itemId, newQuantity);
        });
    });
</script>
{% endblock %}
